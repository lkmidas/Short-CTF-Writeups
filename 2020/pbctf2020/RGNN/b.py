from malduck import unhex
from pwn import process
from z3 import *

CLUE_ROWS = list(unhex
CLUE_COLS = list(unhex("01020102030102010102020103010103020101010301020101010202030101020204030101030301010602010301010202010301050505050505050505050505050505050505050505050505050505050105030102020301020103010101010103010204030201010203030102010106030201050204020105050505050505050505050505050505050505050505050505050505050505050505050505050505010202030101020201010201010202010301020101010301010402010301010102010303010102020108030102010505050505050505050505050505050505050505050505050505050505050505050501010301010202010302010103010201030202010101020203010201030202010103020101020203030301010105010102010101020101020505050505050505050505050505050505050505050505050301020103010101030102010302030202010304020102010102010103010201030301030301010102020301010102010101020101030201010105050505050505050505050505050505050505050505010402040301010203010201030101060201030102010301010203010102010102010304010303010201030105050505050505050505050505050505050505050505050505050505050505050505050501040201010103010201010303020201010101010303010202010305030101010301010203010102030102010201030102010301050505050505050505050505050505050505050505050505050505050101020102010301020101010301010203030201010102010304010101010201030102010302010103010202020101010201030101010201030102020301050505050505050505050505050505050505010202020301030101010202030203010202010202010302020101020201010102010101020202020303020203030201030101010201030105050505050505050505050505050505050505050505050502010102020201030201010103030102020103020301010103010201020201050201030102010101030203030101020105050505050505050505050505050505050505050505050505050505050505050201010301010301020103020201030201020203010102010101020103010101020101030301010102020301010202020301010103010302050505050505050505050505050505050505050505050505020201010202020203030202010201010201010303010201020202040301030102020101020202010104030105050505050505050505050505050505050505050505050505050505050505050505050502020101030102010101020201010301010103010201010103010201010103010101020202020101030302010101030102020201010103010101010505050505050505050505050505050505050505050301010102020101020102010301010102010101020103010101030102020102030202010302010402010101030102020101010103020202020105050505050505050505050505050505050505050505010303010201030201010101030201010201010102010101020101030201030101030201010102010102030502010302030101010505050505050505050505050505050505050505050505050505050501010202030302010101020402010301020101010202010101010201030101010201010202030102010102020103030201010303020203010505050505050505050505050505050505050505050505050201030101020301020101010101010601010303020102020102020101010201010403010201010103010105030205050505050505050505050505050505050505050505050505050505050505050505010102010101010303020101020201010201020101050202030201030301010102010302010403010103010103010505050505050505050505050505050505050505050505050505050505050505050501020201020103010101020103010302020101070301020203020201010102020103030101020201010203010201030202010301030105050505050505050505050505050505050505050505050505050101020103010102030101010201010102010301030102020301010102010102020303010201030102020302010102010301020301010201020101010302020101020505050505050505050505050505010103010105030101010201030102010301010202040101020301010301010102010102030101010301020101010203030102010505050505050505050505050505050505050505050505050505050503040102020103040201020203010103020103010201010203010101020102010103030102010103030102010101020301010201050505050505050505050505050505050505050505050505050505050301010103010202010102010201030101030301010301010201030101010101020101010201010203010101030103020201010203030101010105050505050505050505050505050505050505050505030102010101030201010101020101030204010302010101020101010202010103020102020101010201030103010201020103030103050505050505050505050505050505050505050505050505050501020201030101010302010302010103020302010106020101010202010102010101030101020302030303010101020205050505050505050505050505050505050505050505050505050505050505050301010102020101020101020301020103010103030101030101020103020101020102010103030101020301020303020101030101010305050505050505050505050505050505050505050505050505030101010302030101050301010103010203010103010101020101010301010102020101020101010101020403010104030102010101030101010505050505050505050505050505050505050505050503010202030101020203010103010201030103010102030102010301030201030301020102030303020101020301010202010505050505050505050505050505050505050505050505050505050505050107020101020202030302010102030101010301020103030101030101020201020301040301010103030203050505050505050505050505050505050505050505050505050505050505050505050505020103010104020103020303010102020102030102030201010202020102020102020101030102010102010405050505050505050505050505050505050505050505050505050505050505050505050503010103020101010302010102040102020103010202020103020101020103020201010103020101030101010301030101010505050505050505050505050505050505050505050505050505050505050101010103010201030102010302010103020102020401020202030301020301010202030302010102020101020205050505050505050505050505050505050505050505050505050505050505050505010102010101020101010301020103010301010203020201010203020101030102020302010503020101020102010302020202010301050505050505050505050505050505050505050505050505050501010303010103010202030201020201010102010101030202010101020101010201010101010201010203030302020203020101020103010101030105050505050505050505050505050505050505050102030101010201030102010302010203010201010102010103010303010201010103010201010102010101030102010301020403010201030101030301050505050505050505050505050505050505010302010102020103010104020301010301020101020301020301010201030202020301020101010201030201010301020101010201010205050505050505050505050505050505050505050505050503020201010102010102030301010301010102010302010103010205030101020301010103010201030201050505050505050505050505050505050505050505050505050505050505050505050505050302010703020201010102020301010102010301010203010202010102030303020101040302010105050505050505050505050505050505050505050505050505050505050505050505050505050505030201030102030103010101010103020102030201010302010102010302020101010301020101010303010101030302020201010505050505050505050505050505050505050505050505050505050503010301020101010202020203020103020303010101020201010303030102010101030201030301010102020102020201010505050505050505050505050505050505050505050505050505050505050301010102010102020101030301020101030301020101010202010103030301020103010201010303030102010102010302020103010505050505050505050505050505050505050505050505050505020103010201030103030203010103010201030202020102030503030201010102030101020101020301020103010202010105050505050505050505050505050505050505050505050505050505050502010302010202010202020401010202010302020102030501020101020101010301010101010301010205050505050505050505050505050505050505050505050505050505050505050505050505050102030201010201010102040301020203020103020101030301010102020301010302010301010102010103030301010201030105050505050505050505050505050505050505050505050505050505010203010101020302020103020102010106020101020301020102020202030101020201010102020303020101010505050505050505050505050505050505050505050505050505050505050505050501020201030202020102030403010201030101020302030302040103020101010201030403010201010202010505050505050505050505050505050505050505050505050505050505050505050505050103010202010302010101010303020203020301020103010301020101020201010102020101030101010303020101020201050505050505050505050505050505050505050505050505050505050505010403010102020201050303030202010305020102050101030202010302030203010201030105050505050505050505050505050505050505050505050505050505050505050505050505050505050501010201030201010301020201020102020101010302020103010302010103010203010102020301030101010301010103010201030102010505050505050505050505050505050505050505050505050101010102010102020203010202010203010101020302030301020103010201030101030302020103010105030202010303050505050505050505050505050505050505050505050505050505050505"))

# Parse the clues
rows_clue = [[] for i in range(50)]
cols_clue = [[] for i in range(50)]

for i in range(50):
    for j in range(40):
        value = CLUE_ROWS[2*(j+40*i)]
        if value == 5:
            break
        amount = CLUE_ROWS[2*(j+40*i) + 1]
        rows_clue[i].append((value, amount))

for i in range(50):
    for j in range(40):
        value = CLUE_COLS[2*(j+40*i)]
        if value == 5:
            break
        amount = CLUE_COLS[2*(j+40*i) + 1]
        cols_clue[i].append((value, amount))

h, w = (50, 50)
# Variables for the result matrix
X = [[Int("X_{}_{}".format(i, j)) for j in range(w)] for i in range(h)]
# Variables for the row sequences
R = [[(Int("Rstart_{}_{}".format(i, j)), Int("Rend_{}_{}".format(i, j))) for j in range(len(rows_clue[i]))] for i in range(h)]
# Variables for the col sequences
C = [[(Int("Cstart_{}_{}".format(i, j)), Int("Cend_{}_{}".format(i, j))) for j in range(len(cols_clue[i]))] for i in range(w)]

s = Solver()

# Rules for rows
for i in range(h):
    # Restrictions for sequences' start, end and their length
    for j in range(len(rows_clue[i])):
        s.add(And(0 <= R[i][j][0], R[i][j][0] < w)) # start
        s.add(And(0 <= R[i][j][1], R[i][j][1] < w)) # end
        s.add(R[i][j][1] == R[i][j][0] + rows_clue[i][j][1] - 1) # length

    # Restrictions for distances between sequences
    for j in range(len(rows_clue[i]) - 1):
        # If color is different, don't need 0 in between 2 sequences
        if rows_clue[i][j][0] != rows_clue[i][j + 1][0]:
            s.add(R[i][j][1] < R[i][j + 1][0])
        # If color is similar, must be at least one 0 in between 2 sequences
        else:
            s.add(R[i][j][1] + 1 < R[i][j + 1][0])

    # Restrictions for matrix's values
    for j in range(w):
        zero_cond = True
        for k in range(len(rows_clue[i])):
            # If j is in the middle of A sequence, X[i][j]'s value will be that sequence's
            in_cond = And(R[i][k][0] <= j, j <= R[i][k][1])
            s.add(If(in_cond, X[i][j] == rows_clue[i][k][0], True))
            # If j is not in the middle of ANY sequence, X[i][j] = 0
            zero_cond = And(zero_cond, Not(in_cond))
        s.add(If(zero_cond, X[i][j] == 0, True))

# Rules for cols
for i in range(w):
    # Restrictions for sequences' start, end and their length
    for j in range(len(cols_clue[i])):
        s.add(And(0 <= C[i][j][0], C[i][j][0] < h)) # start
        s.add(And(0 <= C[i][j][1], C[i][j][1] < h)) # end
        s.add(C[i][j][1] == C[i][j][0] + cols_clue[i][j][1] - 1) # length

    # Restrictions for distances between sequences
    for j in range(len(cols_clue[i]) - 1):
        # If color is different, don't need 0 in between 2 sequences
        if cols_clue[i][j][0] != cols_clue[i][j + 1][0]:
            s.add(C[i][j][1] < C[i][j + 1][0])
        # If color is similar, must be at least one 0 in between 2 sequences
        else:
            s.add(C[i][j][1] + 1 < C[i][j + 1][0])

    # Restrictions for matrix's values
    for j in range(h):
        zero_cond = True
        for k in range(len(cols_clue[i])):
            # If j is in the middle of A sequence, X[j][i]'s value will be that sequence's
            in_cond = And(C[i][k][0] <= j, j <= C[i][k][1])
            s.add(If(in_cond, X[j][i] == cols_clue[i][k][0], True))
            # If j is not in the middle of ANY sequence, X[j][i] = 0
            zero_cond = And(zero_cond, Not(in_cond))
        s.add(If(zero_cond, X[j][i] == 0, True))

sol_count = 0
solutions = []
# Try to calculate all possible solutions
while sol_count < 4 and s.check() == sat:
    model = s.model()
    board = [[model[X[i][j]].as_long() for j in range(w)] for i in range(h)]

    solutions.append(board)
    sol_count += 1

    print("sol_count = ", sol_count)

    # Filter our similar solutions
    cond = True
    for i in range(h):
        for j in range(w):
            cond = And(cond, X[i][j] == board[i][j])

    s.add(Not(cond))

# Save to file
f = open("solution.txt", "w")
for i in range(len(solutions[0])):
    f.write(''.join(map(str, solutions[0][i])) + "\n")
f.close()

# Get flag
r = process(["./RGNN", "solution.txt"])
print(r.recvall())
